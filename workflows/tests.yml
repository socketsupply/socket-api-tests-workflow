name: Tests

on:
  workflow_call:

jobs:
  linux:
    runs-on: ubuntu-22.04
    timeout-minutes: 4

    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install Socket Runtime deps
      run: |
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install gcc-12 g++-12 libwebkit2gtk-4.1-dev

    - name: Setup Socket Runtime
      run: |
        git config --global user.email "devops@socketsupply.co"
        git config --global user.name "Socket Supply, Co - Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket.git
        cd socket
        ./bin/install.sh
        ./bin/ci_version_check.sh
        cd ..

    - name: install an io example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/io.git
        cd io && npm install && npm test
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

  mac:
    runs-on: macOS-12
    timeout-minutes: 8

    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: install Socket Runtime deps
      run: |
        brew install automake

    - name: Setup Socket Runtime
      run: |
        git config --global user.email "devops@socketsupply.co"
        git config --global user.name "Socket Supply, Co - Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket.git
        cd socket
        ./bin/install.sh
        ./bin/ci_version_check.sh
        cd ..

    - name: install an io example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/io.git
        cd io && npm install && npm test
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

  ios:
    runs-on: macOS-12
    timeout-minutes: 25

    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 16.x

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: install Socket Runtime deps
      run: |
        brew install automake

    - name: Setup Socket Runtime
      run: |
        git config --global user.email "devops@socketsupply.co"
        git config --global user.name "Socket Supply, Co - Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket.git
        cd socket
        ./bin/install.sh ios
        ./bin/ci_version_check.sh
        cd ..

    - name: install an io example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/io.git
        cd io && npm install && npm run test:ios-simulator
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

  android:
    runs-on: macos-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 18

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: install Socket Runtime deps
      run: |
        brew install automake

    - name: Setup Socket Runtime
      run: |
        git config --global user.email "devops@socketsupply.co"
        git config --global user.name "Socket Supply, Co - Github Actions"
        git clone --depth 1 git@github.com:socketsupply/socket.git
        cd socket
        ./bin/install.sh
        ./bin/ci_version_check.sh
        cd ..

    - name: install an io example app
      run: |
        git config --global user.email "devops@optool.co"
        git config --global user.name "Optool Github Actions"
        git clone --depth 1 git@github.com:socketsupply/io.git
        cd io && npm install
      CI: true
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}

    - name: Gradle cache
      uses: gradle/gradle-build-action@v2

    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-32

    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        arch: x86_64
        api-level: 32
        target: google_apis
        profile: pixel_5
        force-avd-creation: false
        disable-animations: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        script: echo "Generated AVD snapshot for caching."

    - name: Run emulator tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 32
        arch: x86_64
        target: google_apis
        disable-animations: false
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        force-avd-creation: false
        profile: pixel_5
        ndk: 25.0.8775105
        script: |
          npm run test:android

      env:
        CI: true
        CXX: g++-12
